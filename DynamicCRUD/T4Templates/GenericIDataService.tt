<#@ template debug="true" hostspecific="false" language="C#" #>

<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System.Collections.Generic;
using System.Threading.Tasks;
using <#=DTONamespaceName#>.DTOs;

namespace <#=Namespace#>.Services
{
    public interface I<#=ModelName#>DataService
    {
<#      if (!string.IsNullOrWhiteSpace(ForeignKeyName) && !string.IsNullOrWhiteSpace(ForeignKeyDataType)) { #>      
        Task<List<<#=ModelName#>DTO>> GetAll<#=PluralTablename#>Async(<#=ForeignKeyDataType#> <#=ForeignKeyName#>, int pageNumber, int pageSize, string? serverSearchTerm);
<#      } else { #>
        Task<List<<#=ModelName#>DTO>> GetAll<#=PluralTablename#>Async(int pageNumber, int pageSize, string? serverSearchTerm);
<#      } #>
        Task<List<<#=ModelName#>DTO>> Search<#=PluralTablename#>Async(string serverSearchTerm);
        Task<string> Add<#=ModelName#>(<#=ModelName#>DTO <#=ModelNameCamelCase#>DTO);
        Task<<#=ModelName#>DTO?> Get<#=ModelName#>ById(<#=PrimaryKeyDataType#> <#=PrimaryKeyName#>);
        Task<string> Update<#=ModelName#>(<#=ModelName#>DTO <#=ModelNameCamelCase#>DTO, string? username);
        Task Delete<#=ModelName#>(<#=PrimaryKeyDataType#> <#=PrimaryKeyName#>);
        Task<int> GetTotalCount();
    }
}