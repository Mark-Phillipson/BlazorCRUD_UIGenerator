// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DynamicCRUD.T4Templates
{
    using System.Linq;
    using System.Text;
    using System.Reflection;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class GenericTableCodeBehind : GenericTableCodeBehindBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Components;
using System.Net.Http;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Components.Authorization;
using Microsoft.AspNetCore.Components.Forms;
using Microsoft.AspNetCore.Components.Routing;
using Microsoft.AspNetCore.Components.Web;
using Microsoft.AspNetCore.Components.Web.Virtualization;
using Microsoft.JSInterop;
using Blazored.Modal;
using Blazored.Modal.Services;
using Blazored.Toast;
using Blazored.Toast.Services;
using System.Security.Claims;
using Ardalis.GuardClauses;
using ");
            
            #line 27 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write(".Shared;\r\n\r\nnamespace ");
            
            #line 29 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public partial class ");
            
            #line 31 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("Table : ComponentBase\r\n    {\r\n        [Inject] public I");
            
            #line 33 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DataService? ");
            
            #line 33 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DataService { get; set; }\r\n        [Inject] public NavigationManager? NavigationM" +
                    "anager { get; set; }\r\n        [Inject] public ILogger<");
            
            #line 35 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("Table>? Logger { get; set; }\r\n        [Inject] public IToastService? ToastService" +
                    " { get; set; }\r\n        [CascadingParameter] public IModalService? Modal { get; " +
                    "set; }\r\n        public string Title { get; set; } = \"");
            
            #line 38 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(" Items (");
            
            #line 38 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));
            
            #line default
            #line hidden
            this.Write(")\";\r\n        public ");
            
            #line 39 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyDataType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 39 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));
            
            #line default
            #line hidden
            this.Write(" { get; set; }\r\n        public List<");
            
            #line 40 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO>? ");
            
            #line 40 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO { get; set; }\r\n        public List<");
            
            #line 41 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO>? Filtered");
            
            #line 41 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO { get; set; }\r\n        protected ");
            
            #line 42 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("AddEdit? ");
            
            #line 42 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(@"AddEdit { get; set; }
        ElementReference SearchInput;
#pragma warning disable 414, 649
        private bool _loadFailed = false;
        private string? searchTerm = null;
#pragma warning restore 414, 649
        public string? SearchTerm { get => searchTerm; set { searchTerm = value; ApplyFilter(); } }
        public string ExceptionMessage { get; set; } = String.Empty;
        public List<string>? PropertyInfo { get; set; }
        [CascadingParameter] public ClaimsPrincipal? User { get; set; }
        [Inject] public IJSRuntime? JSRuntime { get; set; }
        protected override async Task OnInitializedAsync()
        {
            await LoadData();
        }

        private async Task LoadData()
        {
            try
            {
                if (User?.Identity?.Name != null && ");
            
            #line 62 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DataService != null)\r\n                {\r\n                    var result = (await " +
                    "");
            
            #line 64 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DataService.GetAll");
            
            #line 64 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 64 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));
            
            #line default
            #line hidden
            this.Write("));\r\n\r\n                    if (result != null)\r\n                    {\r\n          " +
                    "              ");
            
            #line 68 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(@"DTO = result.ToList();
                    }
                }

            }
            catch (Exception e)
            {
                Logger?.LogError(""Exception occurred in LoadData Method, Getting Records from the Service"", e);
                _loadFailed = true;
                ExceptionMessage = e.Message;
            }
            Filtered");
            
            #line 79 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO = ");
            
            #line 79 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO;\r\n            Title = $\"");
            
            #line 80 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(" ({Filtered");
            
            #line 80 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(@"DTO?.Count})"";

        }
        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                try
                {
                    if (JSRuntime!= null )
                    {
                        await JSRuntime.InvokeVoidAsync(""window.setFocus"", ""SearchInput"");
                    }
                }
                catch (Exception exception)
                {
                    Console.WriteLine(exception.Message);
                }
            }
        }
        protected async Task AddNew");
            
            #line 100 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("Async()\r\n        {\r\n            var parameters = new ModalParameters();\r\n        " +
                    "    parameters.Add(nameof(User), User);\r\n            //parameters.Add(nameof(");
            
            #line 104 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));
            
            #line default
            #line hidden
            this.Write("), ");
            
            #line 104 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));
            
            #line default
            #line hidden
            this.Write(");\r\n            var formModal = Modal?.Show<");
            
            #line 105 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("AddEdit>(\"Add ");
            
            #line 105 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameWithSpaces));
            
            #line default
            #line hidden
            this.Write(@""", parameters);
            if (formModal != null)
            {
                var result = await formModal.Result;
                if (!result.Cancelled)
                {
                    await LoadData();
                }
            }
        }
        private void ApplyFilter()
        {
            if (Filtered");
            
            #line 117 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO == null || ");
            
            #line 117 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO == null)\r\n            {\r\n                return;\r\n            }\r\n            " +
                    "if (string.IsNullOrEmpty(SearchTerm))\r\n            {\r\n                Filtered");
            
            #line 123 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO = ");
            
            #line 123 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO.OrderBy(v => v.");
            
            #line 123 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DefaultSortColumn));
            
            #line default
            #line hidden
            this.Write(").ToList();\r\n                Title = $\"All ");
            
            #line 124 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));
            
            #line default
            #line hidden
            this.Write(" ({Filtered");
            
            #line 124 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO.Count})\";\r\n            }\r\n            else\r\n            {\r\n                va" +
                    "r temporary = SearchTerm.ToLower().Trim();\r\n                Filtered");
            
            #line 129 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO = ");
            
            #line 129 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO\r\n                    .Where(v => \r\n");
            
            #line 131 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
 
            var counter=0;
            foreach (var property in DatabaseColumns.Where(v => v.Filter==true))  {
                counter++;

            
            #line default
            #line hidden
            
            #line 136 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"

                if (counter==1) {

            
            #line default
            #line hidden
            this.Write("                    (v.");
            
            #line 139 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write("!= null  && v.");
            
            #line 139 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write(".ToLower().Contains(temporary))\r\n");
            
            #line 140 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
              } else {

            
            #line default
            #line hidden
            this.Write("                     || (v.");
            
            #line 142 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write("!= null  &&  v.");
            
            #line 142 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write(".ToLower().Contains(temporary))\r\n");
            
            #line 143 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
              }
            }

            
            #line default
            #line hidden
            this.Write("                    )\r\n                    .ToList();\r\n                Title = $\"" +
                    "Filtered ");
            
            #line 147 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameWithSpaces));
            
            #line default
            #line hidden
            this.Write("s ({Filtered");
            
            #line 147 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO.Count})\";\r\n            }\r\n        }\r\n        protected void Sort");
            
            #line 150 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("(string sortColumn)\r\n        {\r\n            Guard.Against.Null(sortColumn, nameof" +
                    "(sortColumn));\r\n                        if (Filtered");
            
            #line 153 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO == null)\r\n            {\r\n                return;\r\n            }\r\n");
            
            #line 157 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
 
            foreach (var property in DatabaseColumns.Where(v => v.Sort==true))  {

            
            #line default
            #line hidden
            this.Write("            if (sortColumn == \"");
            
            #line 160 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write("\")\r\n            {\r\n                Filtered");
            
            #line 162 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO = Filtered");
            
            #line 162 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO.OrderBy(v => v.");
            
            #line 162 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write(").ToList();\r\n            }\r\n            else if (sortColumn == \"");
            
            #line 164 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write(" Desc\")\r\n            {\r\n                Filtered");
            
            #line 166 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO = Filtered");
            
            #line 166 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DTO.OrderByDescending(v => v.");
            
            #line 166 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write(").ToList();\r\n            }\r\n");
            
            #line 168 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
          }

            
            #line default
            #line hidden
            this.Write("        }\r\n        async Task Delete");
            
            #line 171 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 171 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyDataType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 171 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            //Optionally remove child records here or warn about th" +
                    "eir existence\r\n            //var ? = await ?DataService.GetAll");
            
            #line 174 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 174 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(");\r\n            //if (? != null)\r\n            //{\r\n            //\tToastService.Sh" +
                    "owWarning($\"It is not possible to delete a ");
            
            #line 177 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write(" that is linked to one or more companies! You would have to delete the companys f" +
                    "irst. {?.Count()}\");\r\n            //\treturn;\r\n            //}\r\n            var p" +
                    "arameters = new ModalParameters();\r\n            if (");
            
            #line 181 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DataService != null)\r\n            {\r\n                var ");
            
            #line 183 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write(" = await ");
            
            #line 183 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DataService.Get");
            
            #line 183 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("ById(");
            
            #line 183 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(");\r\n                parameters.Add(\"Title\", \"Please Confirm, Delete ");
            
            #line 184 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameWithSpaces));
            
            #line default
            #line hidden
            this.Write("\");\r\n                parameters.Add(\"Message\", $\"");
            
            #line 185 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DefaultSortColumn));
            
            #line default
            #line hidden
            this.Write(": {");
            
            #line 185 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write("?.");
            
            #line 185 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DefaultSortColumn));
            
            #line default
            #line hidden
            this.Write("}\");\r\n                parameters.Add(\"ButtonColour\", \"danger\");\r\n                " +
                    "parameters.Add(\"Icon\", \"fa fa-trash\");\r\n                var formModal = Modal?.S" +
                    "how<BlazoredModalConfirmDialog>($\"Delete  ");
            
            #line 188 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameWithSpaces));
            
            #line default
            #line hidden
            this.Write(" ({");
            
            #line 188 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write("?.");
            
            #line 188 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DefaultSortColumn));
            
            #line default
            #line hidden
            this.Write("})?\", parameters);\r\n                if (formModal != null)\r\n                {\r\n  " +
                    "                  var result = await formModal.Result;\r\n                    if (" +
                    "!result.Cancelled)\r\n                    {\r\n                        await ");
            
            #line 194 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("DataService.Delete");
            
            #line 194 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 194 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(");\r\n                        ToastService?.ShowSuccess(\" ");
            
            #line 195 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameWithSpaces));
            
            #line default
            #line hidden
            this.Write(" deleted successfully\", \"SUCCESS\");\r\n                        await LoadData();\r\n " +
                    "                   }\r\n                }\r\n            }\r\n        }\r\n        async" +
                    " Task Edit");
            
            #line 201 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 201 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyDataType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 201 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            var parameters = new ModalParameters();\r\n            pa" +
                    "rameters.Add(\"");
            
            #line 204 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 204 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(");\r\n            parameters.Add(nameof(User), User);\r\n            var formModal = " +
                    "Modal?.Show<");
            
            #line 206 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("AddEdit>(\"Edit ");
            
            #line 206 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTableCodeBehind.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameWithSpaces));
            
            #line default
            #line hidden
            this.Write(@""", parameters);
            if (formModal != null)
            {
                var result = await formModal.Result;
                if (!result.Cancelled)
                {
                    await LoadData();
                }
            }
        }
    }
}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class GenericTableCodeBehindBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
