// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DynamicCRUD.T4Templates
{
    using System.Linq;
    using System.Text;
    using System.Reflection;
    using System.Collections.Generic;
    using System;

    /// <summary>
    /// Class to produce the template output
    /// </summary>

#line 1 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class GenericRepository : GenericRepositoryBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            this.Write("using System;\r\nusing AutoMapper;\r\nusing System.Threading.Tasks;\r\nusing System.Col" +
                    "lections.Generic;\r\nusing System.Linq;\r\nusing Microsoft.EntityFrameworkCore;\r\nusi" +
                    "ng Ardalis.GuardClauses;\r\nusing ");

#line 16 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));

#line default
#line hidden
            this.Write(".Models;\r\nusing ");

#line 17 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));

#line default
#line hidden
            this.Write(".DTOs;\r\n\r\nnamespace ");

#line 19 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));

#line default
#line hidden
            this.Write(".Repositories\r\n{\r\n    public class ");

#line 21 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("Repository : I");

#line 21 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("Repository\r\n    {\r\n        private readonly IDbContextFactory<");

#line 23 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DbContextName));

#line default
#line hidden
            this.Write("> _contextFactory;\r\n        private readonly IMapper _mapper;\r\n\r\n        public ");

#line 26 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("Repository(IDbContextFactory<");

#line 26 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DbContextName));

#line default
#line hidden
            this.Write("> contextFactory,IMapper mapper)\r\n        {\r\n            _contextFactory = contex" +
                    "tFactory;\r\n            this._mapper = mapper;\r\n        }\r\n\t\t");

#line 31 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"

            if (!string.IsNullOrEmpty(ForeignKeyName))
            {


#line default
#line hidden
                this.Write("        public async Task<IEnumerable<");

#line 34 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write("DTO>> GetAll");

#line 34 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("Async(");

#line 34 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyDataType));

#line default
#line hidden
                this.Write(" ");

#line 34 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));

#line default
#line hidden
                this.Write(", int pageNumber, int pageSize)\r\n        {\r\n            using var context = _cont" +
                        "extFactory.CreateDbContext();\r\n            List<");

#line 37 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write("> ");

#line 37 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write(";\r\n            if (!string.IsNullOrWhiteSpace(serverSearchTerm))\r\n            {\r\n" +
                        "                ");

#line 40 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("= await context.");

#line 40 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("\r\n                .Where(v => v.");

#line 41 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));

#line default
#line hidden
                this.Write("==");

#line 41 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));

#line default
#line hidden
                this.Write(")\r\n                    .Where(v => \r\n");

#line 43 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"

                var counter = 0;
                foreach (var property in DatabaseColumns.Where(v => v.Filter == true))
                {
                    counter++;


#line default
#line hidden

#line 48 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"

                    if (counter == 1)
                    {


#line default
#line hidden
                        this.Write("                    (v.");

#line 51 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                        this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));

#line default
#line hidden
                        this.Write("!= null  && v.");

#line 51 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                        this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));

#line default
#line hidden
                        this.Write(".ToLower().Contains(serverSearchTerm))\r\n");

#line 52 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                    }
                    else
                    {


#line default
#line hidden
                        this.Write("                     || (v.");

#line 54 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                        this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));

#line default
#line hidden
                        this.Write("!= null  &&  v.");

#line 54 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                        this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));

#line default
#line hidden
                        this.Write(".ToLower().Contains(serverSearchTerm))\r\n");

#line 55 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                    }
                }


#line default
#line hidden
                this.Write("                    )\r\n                \r\n                //.OrderBy(v => v.?)\r\n  " +
                        "              .Skip((pageNumber - 1) * pageSize)\r\n                .Take(pageSize" +
                        ")\r\n                .ToListAsync();\r\n\r\n            }\r\n            else {\r\n       " +
                        "      ");

#line 66 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("= await context.");

#line 66 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("\r\n                .Where(v => v.");

#line 67 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));

#line default
#line hidden
                this.Write("==");

#line 67 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));

#line default
#line hidden
                this.Write(")\r\n                //.OrderBy(v => v.?)\r\n                .Skip((pageNumber - 1) *" +
                        " pageSize)\r\n                .Take(pageSize)\r\n                .ToListAsync();\r\n  " +
                        "          }\r\n            IEnumerable<");

#line 73 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write("DTO> ");

#line 73 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("DTO = _mapper.Map<List<");

#line 73 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write(">, IEnumerable<");

#line 73 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write("DTO>>(");

#line 73 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write(");\r\n            return ");

#line 74 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("DTO;\r\n        }\r\n");

#line 76 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            }
            else
            {

#line default
#line hidden
                this.Write("        public async Task<IEnumerable<");

#line 77 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write("DTO>> GetAll");

#line 77 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("Async(int pageNumber, int pageSize, string? serverSearchTerm)\r\n        {\r\n       " +
                        "     using var context = _contextFactory.CreateDbContext();\r\n            List<");

#line 80 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write("> ");

#line 80 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write(";\r\n            if (!string.IsNullOrWhiteSpace(serverSearchTerm))\r\n            {\r\n" +
                        "                ");

#line 83 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write(" = await context.");

#line 83 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("\r\n                                        .Where(v => \r\n");

#line 85 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"

                var counter = 0;
                foreach (var property in DatabaseColumns.Where(v => v.Filter == true))
                {
                    counter++;


#line default
#line hidden

#line 90 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"

                    if (counter == 1)
                    {


#line default
#line hidden
                        this.Write("                    (v.");

#line 93 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                        this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));

#line default
#line hidden
                        this.Write("!= null  && v.");

#line 93 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                        this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));

#line default
#line hidden
                        this.Write(".ToLower().Contains(serverSearchTerm))\r\n");

#line 94 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                    }
                    else
                    {


#line default
#line hidden
                        this.Write("                     || (v.");

#line 96 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                        this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));

#line default
#line hidden
                        this.Write("!= null  &&  v.");

#line 96 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                        this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));

#line default
#line hidden
                        this.Write(".ToLower().Contains(serverSearchTerm))\r\n");

#line 97 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                    }
                }


#line default
#line hidden
                this.Write(@"                    )

                    //.OrderBy(v => v.?)
                    .Skip((pageNumber - 1) * pageSize)
                    .Take(pageSize)
                    .ToListAsync();
            }
            else
            {
                ");

#line 108 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write(" = await context.");

#line 108 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("\r\n                    //.OrderBy(v => v.?)\r\n                    .Skip((pageNumber" +
                        " - 1) * pageSize)\r\n                    .Take(pageSize)\r\n                    .ToL" +
                        "istAsync();\r\n            }\r\n            IEnumerable<");

#line 114 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write("DTO> ");

#line 114 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("DTO = _mapper.Map<List<");

#line 114 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write(">, IEnumerable<");

#line 114 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
                this.Write("DTO>>(");

#line 114 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write(");\r\n            return ");

#line 115 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
                this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
                this.Write("DTO;\r\n        }\r\n");

#line 117 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            }

#line default
#line hidden
            this.Write("        public async Task<IEnumerable<");

#line 118 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO>> Search");

#line 118 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write("Async(string serverSearchTerm)\r\n        {\r\n            using var context = _conte" +
                    "xtFactory.CreateDbContext();\r\n            var ");

#line 121 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write("= await context.");

#line 121 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write(@"
                //.Where(v => v.Property!= null  && v.Property.ToLower().Contains(serverSearchTerm.ToLower())
                //||v.Property!= null  && v.Property.ToLower().Contains(serverSearchTerm.ToLower())
                //)
                //.OrderBy(v => v.?)
                .Take(1000)
                .ToListAsync();
            IEnumerable<");

#line 128 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO> ");

#line 128 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write("DTO = _mapper.Map<List<");

#line 128 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(">, IEnumerable<");

#line 128 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO>>(");

#line 128 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write(");\r\n            return ");

#line 129 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write("DTO;\r\n        }\r\n\r\n        public async Task<");

#line 132 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO?> Get");

#line 132 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("ByIdAsync(");

#line 132 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyDataType));

#line default
#line hidden
            this.Write(" ");

#line 132 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));

#line default
#line hidden
            this.Write(")\r\n        {\r\n            using var context = _contextFactory.CreateDbContext();\r" +
                    "\n            var result =await context.");

#line 135 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write(".AsNoTracking()\r\n              .FirstOrDefaultAsync(c => c.");

#line 136 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));

#line default
#line hidden
            this.Write(" == ");

#line 136 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));

#line default
#line hidden
            this.Write(");\r\n            if (result == null) return null;\r\n            ");

#line 138 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO ");

#line 138 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write("DTO=_mapper.Map<");

#line 138 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(",");

#line 138 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO>(result);\r\n            return ");

#line 139 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write("DTO;\r\n        }\r\n\r\n        public async Task<");

#line 142 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO?> Add");

#line 142 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("Async(");

#line 142 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO ");

#line 142 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write("DTO)\r\n        {\r\n            using var context = _contextFactory.CreateDbContext(" +
                    ");\r\n            ");

#line 145 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(" ");

#line 145 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write(" = _mapper.Map<");

#line 145 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO, ");

#line 145 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(">(");

#line 145 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write("DTO);\r\n            var addedEntity = context.");

#line 146 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write(".Add(");

#line 146 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write(@");
            try
            {
                await context.SaveChangesAsync();
            }
            catch (Exception exception)
            {
                Console.WriteLine(exception.Message);
                return null;
            }
            ");

#line 156 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO resultDTO=_mapper.Map<");

#line 156 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(", ");

#line 156 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO>(");

#line 156 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write(");\r\n            return resultDTO;\r\n        }\r\n\r\n        public async Task<");

#line 160 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO?> Update");

#line 160 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("Async(");

#line 160 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO ");

#line 160 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write("DTO)\r\n        {\r\n            ");

#line 162 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(" ");

#line 162 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write("=_mapper.Map<");

#line 162 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO, ");

#line 162 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(">(");

#line 162 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write("DTO);\r\n            using (var context = _contextFactory.CreateDbContext())\r\n     " +
                    "       {\r\n                var found");

#line 165 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(" = await context.");

#line 165 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write(".AsNoTracking().FirstOrDefaultAsync(e => e.");

#line 165 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));

#line default
#line hidden
            this.Write(" == ");

#line 165 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write(".");

#line 165 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));

#line default
#line hidden
            this.Write(");\r\n\r\n                if (found");

#line 167 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(" != null)\r\n                {\r\n                    var mapped");

#line 169 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(" = _mapper.Map<");

#line 169 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(">(");

#line 169 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));

#line default
#line hidden
            this.Write(");\r\n                    context.");

#line 170 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write(".Update(mapped");

#line 170 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(");\r\n                    await context.SaveChangesAsync();\r\n                    ");

#line 172 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO resultDTO = _mapper.Map<");

#line 172 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(", ");

#line 172 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("DTO>(mapped");

#line 172 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(");\r\n                    return resultDTO;\r\n                }\r\n            }\r\n    " +
                    "        return null;\r\n        }\r\n        public async Task Delete");

#line 178 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write("Async(");

#line 178 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyDataType));

#line default
#line hidden
            this.Write(" ");

#line 178 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));

#line default
#line hidden
            this.Write(")\r\n        {\r\n            using var context = _contextFactory.CreateDbContext();\r" +
                    "\n            var found");

#line 181 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(" = context.");

#line 181 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write(".FirstOrDefault(e => e.");

#line 181 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));

#line default
#line hidden
            this.Write(" == ");

#line 181 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));

#line default
#line hidden
            this.Write(");\r\n            if (found");

#line 182 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(" == null)\r\n            {\r\n                return;\r\n            }\r\n            con" +
                    "text.");

#line 186 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write(".Remove(found");

#line 186 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));

#line default
#line hidden
            this.Write(");\r\n            await context.SaveChangesAsync();\r\n        }\r\n        public asyn" +
                    "c Task<int> GetTotalCountAsync()\r\n        {\r\n            using var context = _co" +
                    "ntextFactory.CreateDbContext();\r\n            return await context.");

#line 192 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericRepository.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename));

#line default
#line hidden
            this.Write(".CountAsync();\r\n        }\r\n\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }

#line default
#line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class GenericRepositoryBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        public System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0)
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
