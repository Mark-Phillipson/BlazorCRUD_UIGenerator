<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.CodeDom.Compiler" #>
<#@ assembly name="System.CodeDom" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".razor" #>

@page "/<#=ModelName.ToLower()#>"


<div class="row">
    <div class="col-md-8">
        <h5 class="page-title m-1">@Title</h5>
    </div>
    <div class="col-md-4">
        <input @ref="SearchInput" accesskey="i" class="form-control my-1" style="float:right" @bind="@SearchTerm" 
        @bind:event="oninput" id="SearchInput" name="SearchTerm" placeholder="Filter by <#=FilterColumns#> (Alt+I)" />
    </div> 
</div>

@if (Filtered<#=ModelName#>DTO == null && _loadFailed == true)
{
    <h1 class="text-danger">The data failed to load please try again in a little while..</h1>
    <button class="btn btn-danger" type="button" @onclick="@( () => LoadData() )">Reload</button>
    <h6 class="text-danger">@ExceptionMessage</h6>
}
else if (Filtered<#=ModelName#>DTO == null)
{
    <div style="display:normal;margin:auto" class="loader"></div>
}
else if (Filtered<#=ModelName#>DTO.Count == 0)
{
    <p>No <#=PluralTablename#> match the criteria</p>
    <button @onclick="AddNew<#=ModelName#>Async" class="btn btn-success">Add Record <i class="fas fa-plus"></i></button>
}
else
{
    <table style="font-size:small" class="table table-bordered table-striped table-sm table-responsive-sm">
        <thead>
            <tr>
<# 
            foreach (var property in DatabaseColumns)  {
#>
<# 
                if (property.Sort) {
#>              <th>
                    <button class="btn btn-sm" @onclick="@(() => Sort<#=ModelName#>("<#=property.PropertyName#>"))">
                        <i class="fas fa-sort-alpha-up"></i>
                    </button>
                    <button class="btn btn-sm" @onclick="@(() => Sort<#=ModelName#>("<#=property.PropertyName#> Desc"))">
                        <i class="fas fa-sort-alpha-up-alt"></i>
                    </button>
                    <#=property.Label#>
                </th>
<#
                } else {
#>              <th><#=property.Label#></th>
<#
                }
            }
#>
                <th>
                    <button accesskey="+" @onclick="AddNew<#=ModelName#>Async" class="btn btn-success btn-sm">
                        <i class="fas fa-plus"></i>
                    </button>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var <#=ModelNameCamelCase#> in Filtered<#=ModelName#>DTO)
            {
                <tr>
<# 
            foreach (var property in DatabaseColumns)  {
#>
<#
                if (property.PropertyName==PrimaryKeyName) {
#>
                    <td>
                        <a href="#" class="btn btn-sm btn-link" @onclick="@(() => Edit<#=ModelName#>Async(<#=ModelNameCamelCase#>.<#=PrimaryKeyName#>))">
                            @<#=ModelNameCamelCase#>.<#=PrimaryKeyName#>
                        </a>
                    </td>
<#              } else {
#>
                    <td>@<#=ModelNameCamelCase#>.<#=property.PropertyName#></td>
<#              } 
             }
#>
                    <td class="btn-group-vertical">
                        <button class="btn btn-sm btn-warning" @onclick="@(() => Edit<#=ModelName#>Async(<#=ModelNameCamelCase#>.<#=PrimaryKeyName#>))">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-danger" @onclick="@(() => Delete<#=ModelName#>Async(<#=ModelNameCamelCase#>.<#=PrimaryKeyName#>))">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
