// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DynamicCRUD.T4Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class GenericTable : GenericTableBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n    ");
            this.Write("        ");
            this.Write("            ");
            this.Write("                ");
            this.Write("                    ");
            this.Write("                        ");
            this.Write("                            ");
            this.Write("                                ");
            this.Write("                                    ");
            
            #line 11 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 if (!string.IsNullOrWhiteSpace(ForeignKeyName)) {
            
            #line default
            #line hidden
            this.Write("                                        @page \"/");
            
            #line 12 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename.ToLower()));
            
            #line default
            #line hidden
            this.Write("/{");
            
            #line 12 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));
            
            #line default
            #line hidden
            this.Write(":int}\"\r\n                                                ");
            
            #line 13 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("                                                    @page \"/");
            
            #line 14 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PluralTablename.ToLower()));
            
            #line default
            #line hidden
            this.Write("\"\r\n                                                        ");
            
            #line 15 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 }
            
            #line default
            #line hidden
            this.Write(@"                                                            @rendermode InteractiveServer
                                                            <div class=""row"">
                                                                <div class=""col-md-12"">
                                                                    ");
            
            #line 19 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 if (!UseBlazored) {
            
            #line default
            #line hidden
            this.Write(@"                                                                        @if (ApplicationState!= null &&
                                                                        !string.IsNullOrWhiteSpace(ApplicationState.Message))
                                                                        {
                                                                        <div class=""alert alert-@ApplicationState.MessageType alert-dismissible fade show""
                                                                            role=""alert"">
                                                                            <strong>Note!</strong>
                                                                            @ApplicationState.Message
                                                                            @DateTime.Now.ToShortTimeString()
                                                                            <button type=""button"" class=""btn-close""
                                                                                @onclick=""@(() => HideMessage())""
                                                                                aria-label=""Close""></button>
                                                                        </div>
                                                                        }
                                                                        ");
            
            #line 33 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 }
            
            #line default
            #line hidden
            this.Write("                                                                </div>\r\n         " +
                    "                                                       <div class=\"col-md-3\">\r\n<" +
                    "h5 class=\"m-1\">@Title of @totalRows Page: @pageNumber</h5>\r\n                    " +
                    "                                            </div>\r\n                            " +
                    "                                    <div class=\"col-md-4\">\r\n                    " +
                    "                                                <button title=\"Go to 1st page\" t" +
                    "ype=\"button\"\r\n                                                                  " +
                    "      class=\"btn btn-sm btn-outline-secondary mx-1\"\r\n                           " +
                    "                                             @onclick=\"@(()  => PageDown(true))\"" +
                    ">\r\n                                                                        <i cl" +
                    "ass=\"bi bi-skip-backward-fill\"></i>\r\n                                           " +
                    "                         </button>\r\n                                            " +
                    "                        <button title=\"Go to previous page\" type=\"button\"\r\n     " +
                    "                                                                   class=\"btn bt" +
                    "n-sm btn-outline-secondary mx-1\"\r\n                                              " +
                    "                          @onclick=\"(()  => PageDown(false))\">\r\n                " +
                    "                                                        <i class=\"bi bi-caret-le" +
                    "ft-fill\"></i>\r\n                                                                 " +
                    "   </button>\r\n                                                                  " +
                    "  <button title=\"Go to next page\" type=\"button\"\r\n                               " +
                    "                                         class=\"btn btn-sm btn-outline-secondary" +
                    " mx-1\"\r\n                                                                        " +
                    "@onclick=\"(() => PageUp(false)) \">\r\n                                            " +
                    "                            <i class=\"bi bi-caret-right-fill\"></i>\r\n            " +
                    "                                                        </button>\r\n             " +
                    "                                                       <button title=\"Go to last" +
                    " page\" type=\"button\"\r\n                                                          " +
                    "              class=\"btn btn-sm btn-outline-secondary mx-1\"\r\n                   " +
                    "                                                     @onclick=\"(()  => PageUp(tr" +
                    "ue))\">\r\n                                                                        " +
                    "<i class=\"bi bi-skip-forward-fill\"></i>\r\n                                       " +
                    "                             </button>\r\n                                        " +
                    "                        </div>\r\n                                                " +
                    "                ");
            
            #line 60 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
if (!string.IsNullOrWhiteSpace(ForeignKeyName)) {
            
            #line default
            #line hidden
            this.Write(@"                                                                    @* <div class=""col-md-1"">
                                                                        <a class=""btn btn-primary btn-sm m-2""
                                                                            href=""/ParentTable/@");
            
            #line 63 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ForeignKeyName));
            
            #line default
            #line hidden
            this.Write(@"""><i
                                                                                class="""" bi bi-caret-left""></i></a
                                                                            </div>*@
                                                                        ");
            
            #line 66 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
} 
            
            #line default
            #line hidden
            this.Write(@"                                                                            <div class=""col-md-4"">
                                                                                <input @ref=""SearchInput"" accesskey=""i""
                                                                                    class=""form-control my-1""
                                                                                    style=""float:right""
                                                                                    @bind=""@SearchTerm""
                                                                                    @bind:event=""oninput""
                                                                                    id=""SearchInput"" name=""SearchTerm""
                                                                                    placeholder=""Filter by ");
            
            #line 74 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(FilterColumns));
            
            #line default
            #line hidden
            this.Write(@" (Alt+I)"" />
                                                                            </div>
                                                                    </div>

                                                                    @if (Filtered");
            
            #line 78 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(@"DTO == null &&
                                                                        _loadFailed == true)
                                                                        {
                                                                        <h2 class=""text-danger"">The data failed to load
                                                                            please try again in a little while..</h2>
                                                                        <button class=""btn btn-danger"" type=""button""
                                                                            @onclick=""@( () => LoadData() )"">Reload</button>
                                                                        <h6 class=""text-danger"">@ExceptionMessage</h6>
                                                                        }
                                                                        else if (Filtered");
            
            #line 87 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(@"DTO == null)
                                                                            {
                                                                            <div style=""display:normal;margin:auto""
                                                                                class=""loader""></div>
                                                                            }
                                                                            else if (Filtered");
            
            #line 92 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(@"DTO.Count ==
                                                                                0)
                                                                                {
                                                                                <p>No ");
            
            #line 95 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameWithSpaces));
            
            #line default
            #line hidden
            this.Write(" match the\r\n                                                                     " +
                    "                   criteria</p>\r\n                                               " +
                    "                                 <button @onclick=\"AddNew");
            
            #line 97 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(@"""
                                                                                    class=""btn btn-outline-primary  btn-lg"">Add
                                                                                    Record <i
                                                                                        class=""bi bi-plus-square""></i></button>
                                                                                }
                                                                                else
                                                                                {
                                                                                <table style=""font-size:small""
                                                                                    class=""table table-bordered table-striped table-sm table-responsive-sm"">
                                                                                    <thead>
                                                                                        <tr>
                                                                                            ");
            
            #line 108 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 foreach (var property in
                                                                                                DatabaseColumns) { 
            
            #line default
            #line hidden
            this.Write("                                                                                 " +
                    "               ");
            
            #line 110 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 if (property.Sort) {
                                                                                                    
            
            #line default
            #line hidden
            this.Write(@"                                                                                                    <th>
                                                                                                        <button
                                                                                                            class=""btn btn-sm""
                                                                                                            @onclick=""@(() => Sort");
            
            #line 115 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("(\"\r\n                                                                             " +
                    "                               ");
            
            #line 116 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write(@"""))"">
                                                                                                            <i
                                                                                                                class=""bi bi-sort-alpha-up""></i>
                                                                                                        </button>
                                                                                                        <button
                                                                                                            class=""btn btn-sm""
                                                                                                            @onclick=""@(() => Sort");
            
            #line 122 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("(\"\r\n                                                                             " +
                    "                               ");
            
            #line 123 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write(@"
                                                                                                            Desc""))"">
                                                                                                            <i
                                                                                                                class=""bi bi-sort-alpha-up-alt""></i>
                                                                                                        </button>
                                                                                                        ");
            
            #line 128 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Label));
            
            #line default
            #line hidden
            this.Write("\r\n                                                                               " +
                    "                     </th>\r\n                                                    " +
                    "                                                ");
            
            #line 130 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("                                                                                 " +
                    "                       <th>\r\n                                                   " +
                    "                                                         ");
            
            #line 132 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Label));
            
            #line default
            #line hidden
            this.Write("\r\n                                                                               " +
                    "                         </th>\r\n                                                " +
                    "                                                        ");
            
            #line 134 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 } } 
            
            #line default
            #line hidden
            this.Write(@"                                                                                                            <th>
                                                                                                                <button
                                                                                                                    accesskey=""+""
                                                                                                                    @onclick=""AddNew");
            
            #line 138 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(@"""
                                                                                                                    class=""btn btn-outline-success btn-sm"">
                                                                                                                    Create
                                                                                                                    <i
                                                                                                                        class=""bi bi-plus-square""></i>
                                                                                                                </button>
                                                                                                            </th>
                                                                                        </tr>
                                                                                    </thead>
                                                                                    <tbody>
                                                                                        @foreach (var
                                                                                        ");
            
            #line 149 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write(" in\r\n                                                                            " +
                    "                Filtered");
            
            #line 150 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write(@"DTO)
                                                                                                {
                                                                                                <tr>
                                                                                                    ");
            
            #line 153 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 foreach (var
                                                                                                        property in
                                                                                                        DatabaseColumns)
                                                                                                        { 
            
            #line default
            #line hidden
            this.Write("                                                                                 " +
                    "                       ");
            
            #line 157 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 if
                                                                                                            (property.PropertyName==PrimaryKeyName)
                                                                                                            { 
            
            #line default
            #line hidden
            this.Write(@"                                                                                                            <td style=""cursor:pointer""
                                                                                                                @onclick=""@(() => Edit");
            
            #line 161 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 161 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 161 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(@"))"">
                                                                                                                <button
                                                                                                                    class=""btn btn-sm btn-link"">
                                                                                                                    @
                                                                                                                    ");
            
            #line 165 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write("\r\n                                                                               " +
                    "                                         .\r\n                                    " +
                    "                                                                                " +
                    "    ");
            
            #line 167 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(@"
                                                                                                                </button>
                                                                                                            </td>
                                                                                                            ");
            
            #line 170 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 } else {
                                                                                                                
            
            #line default
            #line hidden
            this.Write("                                                                                 " +
                    "                               <td>@\r\n                                          " +
                    "                                                                          ");
            
            #line 173 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write("\r\n                                                                               " +
                    "                                         .\r\n                                    " +
                    "                                                                                " +
                    "    ");
            
            #line 175 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.PropertyName));
            
            #line default
            #line hidden
            this.Write("\r\n                                                                               " +
                    "                                 </td>\r\n                                        " +
                    "                                                                        ");
            
            #line 177 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 } }
                                                                                                                    
            
            #line default
            #line hidden
            this.Write(@"                                                                                                                    <td
                                                                                                                        class=""btn-group-vertical"">
                                                                                                                        <button
                                                                                                                            class=""btn btn-sm btn-outline-warning""
                                                                                                                            @onclick=""@(() => Edit");
            
            #line 183 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 183 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 183 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(@"))"">
                                                                                                                            Edit
                                                                                                                            <i
                                                                                                                                class=""bi bi-pencil-square""></i>
                                                                                                                        </button>
                                                                                                                        <button
                                                                                                                            class=""btn btn-sm btn-outline-danger""
                                                                                                                            @onclick=""@(() => Delete");
            
            #line 190 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 190 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameCamelCase));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 190 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write(@"))"">
                                                                                                                            Delete
                                                                                                                            <i
                                                                                                                                class=""bi bi-trash""></i>
                                                                                                                        </button>
                                                                                                                    </td>
                                                                                                </tr>
                                                                                                }
                                                                                    </tbody>
                                                                                </table>
                                                                                }
                                                                                ");
            
            #line 201 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 if (!UseBlazored) {
            
            #line default
            #line hidden
            this.Write(@"                                                                                    @if (ShowEdit)
                                                                                    {
                                                                                    <dialog open=""true""
                                                                                        style=""position:absolute;left: 0px;top: 200px;z-index: 900""
                                                                                        class=""border border-danger"">
                                                                                        <button
                                                                                            class=""btn btn-outline-secondary m-2""
                                                                                            style=""float:right""
                                                                                            type=""submit""
                                                                                            @onclick=""@( ( ) => ToggleModal(  ) )"">x</button>
                                                                                        <div>
                                                                                            <");
            
            #line 213 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("AddEdit\r\n                                                                        " +
                    "                        Title=\"@EditTitle\"\r\n                                    " +
                    "                                                            ");
            
            #line 215 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKeyName));
            
            #line default
            #line hidden
            this.Write("=\"@\r\n                                                                            " +
                    "                        ");
            
            #line 216 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelName));
            
            #line default
            #line hidden
            this.Write("Id\"\r\n                                                                            " +
                    "                            CloseModal=\"@CloseModalAsync\"\r\n                     " +
                    "                                                                                " +
                    "   ParentId=\"@ParentId\"\r\n                                                       " +
                    "                                                 />\r\n                           " +
                    "                                                             </div>\r\n           " +
                    "                                                                         </dialo" +
                    "g>\r\n\r\n                                                                          " +
                    "          }\r\n\r\n                                                                 " +
                    "                   @if (ShowDeleteConfirm)\r\n                                    " +
                    "                                                {\r\n                             " +
                    "                                                       <dialog open=\"true\"\r\n    " +
                    "                                                                                " +
                    "    style=\"position:absolute;left: 0px;top: 200px;z-index: 900\"\r\n               " +
                    "                                                                         class=\"" +
                    "border border-danger\">\r\n                                                        " +
                    "                                <button\r\n                                       " +
                    "                                                     class=\"btn btn-outline-seco" +
                    "ndary m-2\"\r\n                                                                    " +
                    "                        style=\"float:right\"\r\n                                   " +
                    "                                                         type=\"submit\"\r\n        " +
                    "                                                                                " +
                    "    @onclick=\"@( ( ) => ToggleShowDeleteConfirm(  ) )\">x</button>\r\n             " +
                    "                                                                           <Blaz" +
                    "oredModalConfirmDialogMVC\r\n                                                     " +
                    "                                       Confirm=\"@CloseConfirmDeletion\"\r\n        " +
                    "                                                                                " +
                    "    ButtonColour=\"danger\"\r\n                                                     " +
                    "                                       Icon=\"bi bi-trash\"\r\n                     " +
                    "                                                                       Message=\"" +
                    "Please confirm that you wish to delete a record.\"\r\n                             " +
                    "                                                               Title=\"Deletion C" +
                    "onfirmation ");
            
            #line 240 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNameWithSpaces));
            
            #line default
            #line hidden
            this.Write(@" Table"" />
                                                                                        <form method=""dialog"">
                                                                                        </form>
                                                                                    </dialog>
                                                                                    }
                                                                                    ");
            
            #line 245 "C:\Users\MPhil\source\repos\BlazorCRUD_UIGenerator\DynamicCRUD\T4Templates\GenericTable.tt"
 }
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class GenericTableBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        public System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
