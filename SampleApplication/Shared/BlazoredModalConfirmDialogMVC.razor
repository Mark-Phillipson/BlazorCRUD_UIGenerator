<hr>
<div class="dialog-title">
    <h3>@Title</h3>
</div>
<hr>
<form class="dialog-body">
    <div class="font-weight-bold">
        @Message
    </div>
</form>
<hr>
<div class="dialog-footer">
    <div class="dialog-buttons">
        <i class="@Icon text-@ButtonColour" style="font-size:xx-large"></i>
        <div class="btn-group" style="float:right">
            <button accesskey="n" @ref="CancelButton" class="btn btn-info btn-lg mr-auto"
            @onclick="@OnCancel">
                Ca<u>n</u>cel
            </button>
            <button accesskey="m" class="btn btn-@ButtonColour btn-lg ml-auto" @onclick="@OnConfirm">Confir<u>m</u></button>
        </div>
    </div>
</div>
@code {
    [Parameter] public EventCallback<bool> Confirm { get; set; }
    [Parameter] public string Title { get; set; } = "Please Confirm";
    [Parameter] public string? Message { get; set; }
    [Parameter] public string ButtonColour { get; set; } = "danger";
    [Parameter] public string? Icon { get; set; } = "fas fa-question";

    ElementReference CancelButton;
    private async Task OnCancel()
    {
        await Confirm.InvokeAsync(false);
    }
    private async Task OnConfirm()
    {
        await Confirm.InvokeAsync(true);
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CancelButton.FocusAsync();
        }
    }

}